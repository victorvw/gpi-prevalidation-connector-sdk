openapi: 3.0.0
info:
  title: Beneficiary account pre-validation
  description: Move your app forward with the account pre-validation API.
  contact:
    name: Standards & Developer Hub
    url: https://developer.swift.com
    email: developer-support@swift.com
  license:
    name: API Restricted License
    url: https://www.swift.com/file/56776/download?token=8w8DC4eF
  version: 1.0.10
servers:
- url: https://local-api-domain/swift-preval-pilot
  description: Pilot environment
paths:
  /v1/accounts/verification:
    post:
      tags:
      - Verify account
      summary: Verify that a beneficiary account could be able to receive incoming
        funds.
      description: The service verifies that an account exists at the beneficiary
        bank and is capable of receiving incoming funds. This usually implies that
        the account is open, properly identified by the given number and, depending
        on the jurisdiction and market practices in use where the account is held,
        that the creditor name matches the name of the account holder. The service
        provider does not take liability for the response and does not provide any
        guarantee on the outcome of an actual transaction being sent to this account.
        The information provided is meant to be as accurate as possible at the time
        that the request was processed. The requester must pass the creditor name
        and the service provider can use this information as part of the verification
        or not.
      operationId: VerifyAccount
      parameters:
      - name: LAUApplicationID
        in: header
        description: ID that identifies the application generating the API and used
          by the gpi Connector to retrieve the related LAU keys, required for consumers
          using gpi connector only.
        required: true
        schema:
          pattern: ^(?:[a-zA-Z0-9]{1,16})$
          type: string
          default: "001"
      - name: LAUCallTime
        in: header
        description: Timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ,
          required for consumers using gpi connector only.
        required: true
        schema:
          pattern: ^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]+)?(?:Z|[+-][01]\d:[0-5]\d)?$
          type: string
          example: 2018-03-23T15:56:26.728Z
      - name: LAURequestNonce
        in: header
        description: A random value generated by the client consumer. Provided with
          the request and copied by the gpi Connector on the response, required for
          consumers using gpi connector only.
        required: true
        schema:
          pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$
          type: string
          example: e802ab96-bb3a-4965-9139-5214b9f0f074
      - name: LAUSigned
        in: header
        description: |
          Includes the signed headers to be passed to SWIFT in the request.

          * The first is the application API Key (ApplAPIKey).

          * The second parameter is the x-bic. It identifies the destination of the request.
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^(?:\(ApplAPIKey=.{1,40}\),\(x-bic=[a-z]{6,6}[a-z2-9][a-np-z0-9]\))?$
          type: string
          example: (ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(x-bic=cclabeb0)
      - name: LAUVersion
        in: header
        description: Version of the LAUSigned header. Mandatory. "1.0" for this first
          release, required for consumers using gpi connector only.
        required: true
        schema:
          pattern: ^(?:[1][\.][0])$
          type: string
          default: "1.0"
      - name: LAUSignature
        in: header
        description: |
          Contains the LAU (SHA256) signature, base64 encoded, required for consumers using gpi connector only. The data signed is a concatenated string of following elements&#58;

          * All HTTP headers prefixed to "LAU", ordered in lexicographic order, and where the leading and trailing spaces and tabs are removed. The HTTP header itself including the "&#58;" and the CRLF at the end of the HTTP header field are included.

          * The abs_path (see RFC 2616) and any query parameter of the request URI, including the CRLF at the end. For example, if the URL is https&#58;//local-api-domain/swift-preval/v1/endpoint?next=bmV4dA==, the data signed is /swift-preval/v1/endpoint?next=bmV4dA==CRLF. Bear in mind CRLF the control characters added at the end.

          * The request body. If there is no request body, then only the HTTP headers and the abs_path are signed.
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
          type: string
          example: U1khA8h9Lm1PqzB99fG6uw==
        x-swift-lau-request:
          cryptography: hmac-sha256
          sigBytes: 16
          inputDataPrefix: ':'
          inputDataDelimiter: CRLF
          inputData:
            type: object
            properties:
              LAUApplicationID:
                type: string
                example: "001"
              LAUCallTime:
                type: string
                example: 2018-03-23T15:56:27.728Z
              LAURequestNonce:
                type: string
                example: e802ab96-bb3a-4965-9139-5214b9f0f074
              LAUSigned:
                type: string
                example: (ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(x-bic=cclabeb0)
              LAUVersion:
                type: string
                example: "1.0"
              absPath:
                type: string
              requestBody:
                type: string
                example: HTTPBodyRequest
            required:
            - LAUApplicationID
            - LAUCallTime
            - LAURequestNonce
            - LAUSigned
            - LAUVersion
            - absPath
            - requestBody
          schema:
            type: string
            pattern: ^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$
            example: U1khA8h9Lm1PqzB99fG6uw==
      - name: x-bic
        in: header
        description: Describe the BIC for SWIFT to route the request. Providers get
          the value and consumers are not required to fill it in.
        required: true
        schema:
          pattern: ^[a-z]{6,6}[a-z2-9][a-np-z0-9]$
          type: string
          example: cclabeb0
      - name: SubjectDN
        in: header
        description: Describe the Distinguished Name (DN) of the consumer. Providers
          get the value and consumers are not required to fill it in.
        schema:
          type: string
          example: o=cclausb0,o=swift
      - name: Institution
        in: header
        description: Describe the BIC of the consumer. Providers get the value and
          consumers are not required to fill it in.
        schema:
          type: string
          example: cclausb0
      requestBody:
        description: Verify account details request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountVerificationRequest'
        required: true
      responses:
        200:
          description: Get Account Details Response
          headers:
            LAUApplicationID:
              $ref: '#/components/parameters/LAUApplicationID'
            LAUVersion:
              $ref: '#/components/parameters/LAUVersion'
            LAUCallTime:
              $ref: '#/components/parameters/LAUCallTime'
            LAURequestNonce:
              $ref: '#/components/parameters/LAURequestNonce'
            LAUResponseNonce:
              $ref: '#/components/parameters/LAUResponseNonce'
            LAUSignature:
              $ref: '#/components/parameters/LAUSignatureForResponse'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountVerificationResponse1'
              examples:
                scenario1_success:
                  $ref: '#/components/examples/scenario1_success'
                scenario1_failure_account_does_match:
                  $ref: '#/components/examples/scenario1_failure_account_does_match'
                scenario1_account_match_but_blocked_for_compliance_reason:
                  $ref: '#/components/examples/scenario1_account_match_but_blocked_for_compliance_reason'
                scenario1_account_exists_but_type_does_not_allow_incoming_funds:
                  $ref: '#/components/examples/scenario1_account_exists_but_type_does_not_allow_incoming_funds'
                scenario1_account_exists_but_closed:
                  $ref: '#/components/examples/scenario1_account_exists_but_closed'
                scenario1_account_matches_but_name_does_match:
                  $ref: '#/components/examples/scenario1_account_matches_but_name_does_match'
                scenario2_success_name_and_account_match:
                  $ref: '#/components/examples/scenario2_success_name_and_account_match'
                scenario2_failure_account_does_not_match:
                  $ref: '#/components/examples/scenario2_failure_account_does_not_match'
                scenario2_account_match_but_blocked_for_compliance_reason:
                  $ref: '#/components/examples/scenario2_account_match_but_blocked_for_compliance_reason'
                scenario2_account_exists_but_type_does_not_allow_incoming_funds:
                  $ref: '#/components/examples/scenario2_account_exists_but_type_does_not_allow_incoming_funds'
                scenario2_account_exists_but_closed:
                  $ref: '#/components/examples/scenario2_account_exists_but_closed'
                scenario2_account_matches_but_name_does_match:
                  $ref: '#/components/examples/scenario2_account_matches_but_name_does_match'
                scenario3_success_name_and_account_match:
                  $ref: '#/components/examples/scenario3_success_name_and_account_match'
                scenario3_failure_account_does_not_match:
                  $ref: '#/components/examples/scenario3_failure_account_does_not_match'
                scenario3_account_match_but_blocked_for_compliance_reason:
                  $ref: '#/components/examples/scenario3_account_match_but_blocked_for_compliance_reason'
                scenario3_account_exists_but_type_does_not_allow_incoming_funds:
                  $ref: '#/components/examples/scenario3_account_exists_but_type_does_not_allow_incoming_funds'
                scenario3_account_exists_but_closed:
                  $ref: '#/components/examples/scenario3_account_exists_but_closed'
                scenario3_account_matches_but_name_does_match:
                  $ref: '#/components/examples/scenario3_account_matches_but_name_does_match'
                scenario4_success_name_and_account_match:
                  $ref: '#/components/examples/scenario4_success_name_and_account_match'
                scenario4_failure_account_does_not_match:
                  $ref: '#/components/examples/scenario4_failure_account_does_not_match'
                scenario4_account_match_but_blocked_for_compliance_reason:
                  $ref: '#/components/examples/scenario4_account_match_but_blocked_for_compliance_reason'
                scenario4_account_exists_but_type_does_not_allow_incoming_funds:
                  $ref: '#/components/examples/scenario4_account_exists_but_type_does_not_allow_incoming_funds'
                scenario4_account_exists_but_closed:
                  $ref: '#/components/examples/scenario4_account_exists_but_closed'
                scenario4_account_matches_but_name_does_match:
                  $ref: '#/components/examples/scenario4_account_matches_but_name_does_match'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCodeConsumer'
              examples:
                scenario_not_allowed:
                  $ref: '#/components/examples/scenario_not_allowed'
                scenario_no_integration:
                  $ref: '#/components/examples/scenario_no_integration'
                scenario_bad_request:
                  $ref: '#/components/examples/scenario_bad_request'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCodeConsumer'
              examples:
                scenario_invalid_token:
                  $ref: '#/components/examples/scenario_invalid_token'
                scenario_bad_request:
                  $ref: '#/components/examples/scenario_bad_request'
                scenario_insufficient_scope:
                  $ref: '#/components/examples/scenario_insufficient_scope'
                scenario_service_not_provisioned:
                  $ref: '#/components/examples/scenario_service_not_provisioned'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCodeConsumer'
              example:
                status:
                  severity: Fatal
                  code: SwAP506
                  text: Resource does not exist.
        429:
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCodeConsumer'
              example:
                status:
                  severity: Transient
                  code: SwAP507
                  text: Request cannot be processed at this time. Please try later.
                    (header Retry-After indicates how long to wait before making a
                    follow-up request).
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCodeConsumer'
              example:
                status:
                  severity: Fatal
                  code: SwAP599
                  text: Server encountered an unexpected condition and cannot fulfill
                    the request.
        502:
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCodeConsumer'
              example:
                status:
                  severity: Transient
                  code: SwAP008
                  text: Invalid response received from Service Provider.
        503:
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCodeConsumer'
              example:
                status:
                  severity: Transient
                  code: SwAP590
                  text: Service is temporary unavailable (header Retry-After indicates
                    how long to wait before making a follow-up request).
        504:
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCodeConsumer'
              example:
                status:
                  severity: Transient
                  code: SwAP591
                  text: Service Provider time out.
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorCodeConsumer'
      security:
      - SwiftLAU: []
components:
  examples:
    scenario1_success:
      description: >-
        The service provider is in 'scenario 1' (its jurisdiction
        does not require to verify the creditor name and its
        implementation does not verify the creditor name). There is
        an account in the beneficiary bankâ€™s books that is
        identified by the account identifier (number)  passed in the
        request and the holder of which corresponds to the given
        creditor name.  This account is open and capable of
        receiving funds.
      value:
        correlation_identifier: SCENARIO1-CORRID-001
        response:
          account_validation_status: PASS
          creditor_account_match: MTCH
          creditor_name_match: NOAP
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario1_failure_account_does_match:
      description: >-
        The service provider is in 'scenario 1' (its jurisdiction
        does not require to verify the creditor name and its
        implementation does not verify the creditor name). The
        account number provided in the request is not in the
        beneficiary bankâ€™s books, and thus cannot receive  incoming
        funds.
      value:
        correlation_identifier: SCENARIO1-CORRID-002
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOAP
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario1_account_match_but_blocked_for_compliance_reason:
      description: >-
        The service provider is in 'scenario 1' (its jurisdiction
        does not require to verify the creditor name and its
        implementation does not verify the creditor name). The
        account number provided in the request is in the beneficiary
        bankâ€™s books. However the account is  blocked for compliance
        reasons. The beneficiary bank cannot disclose any
        information about this state (â€˜no tipping offâ€™).
      value:
        correlation_identifier: SCENARIO1-CORRID-003
        response:
          account_validation_status: PASS
          creditor_account_match: MTCH
          creditor_name_match: NOAP
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario1_account_exists_but_type_does_not_allow_incoming_funds:
      description: >-
        The service provider is in 'scenario 1' (its jurisdiction
        does not require to verify the creditor name and its
        implementation does not verify the creditor name). The
        account number provided in the request is in the beneficiary
        bankâ€™s books. However this type of  account does not allow
        incoming funds (eg. mortgage account).
      value:
        correlation_identifier: SCENARIO1-CORRID-004
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOAP
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario1_account_exists_but_closed:
      description: >-
        The service provider is in 'scenario 1' (its jurisdiction
        does not require to verify the creditor name and its
        implementation does not verify the creditor name). The
        account number provided in the request is in the beneficiary
        bankâ€™s books but classified as closed  and thus cannot
        receive incoming funds.
      value:
        correlation_identifier: SCENARIO1-CORRID-005
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOAP
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario1_account_matches_but_name_does_match:
      description: >-
        The service provider is in 'scenario 1' (its jurisdiction
        does not require to verify the creditor name and its
        implementation does not verify the creditor name). The
        account number provided in the request identifies an account
        in the beneficiary bankâ€™s books and is in a  state to be the
        target account of a payment transaction. However the name of
        the account holder doesnâ€™t match  the one provided in the
        request.
      value:
        correlation_identifier: SCENARIO1-CORRID-006
        response:
          account_validation_status: PASS
          creditor_account_match: MTCH
          creditor_name_match: NOAP
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario2_success_name_and_account_match:
      description: >-
        The service provider is in 'scenario 2' (its jurisdiction
        does not require to verify the creditor name but its
        pre-validation implementation verifies the creditor name).
        There is an account in the beneficiary bankâ€™s books that is
        identified by the account identifier (number)  passed in the
        request and the holder of which corresponds to the given
        creditor name.  This account is open and capable of
        receiving funds.
      value:
        correlation_identifier: SCENARIO2-CORRID-001
        response:
          account_validation_status: PASS
          creditor_account_match: MTCH
          creditor_name_match: MTCH
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario2_failure_account_does_not_match:
      description: >-
        The service provider is in 'scenario 2' (its jurisdiction
        does not require to verify the creditor name but its
        pre-validation implementation verifies the creditor name).
        The account number provided in the request is not in the
        beneficiary bankâ€™s books, and thus cannot receive  incoming
        funds.
      value:
        correlation_identifier: SCENARIO2-CORRID-002
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOAP
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario2_account_match_but_blocked_for_compliance_reason:
      description: >-
        The service provider is in 'scenario 2' (its jurisdiction
        does not require to verify the creditor name but its
        pre-validation implementation verifies the creditor name).
        The account number provided in the request is in the
        beneficiary bankâ€™s books. However the account is  blocked
        for compliance reasons. The beneficiary bank cannot disclose
        any information about this state (â€˜no tipping offâ€™).
      value:
        correlation_identifier: SCENARIO2-CORRID-003
        response:
          account_validation_status: PASS
          creditor_account_match: MTCH
          creditor_name_match: MTCH
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario2_account_exists_but_type_does_not_allow_incoming_funds:
      description: >-
        The service provider is in 'scenario 2' (its jurisdiction
        does not require to verify the creditor name but its
        pre-validation implementation verifies the creditor name).
        The account number provided in the request is in the
        beneficiary bankâ€™s books. However this type of  account does
        not allow incoming funds (eg. mortgage account).
      value:
        correlation_identifier: SCENARIO2-CORRID-004
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOAP
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario2_account_exists_but_closed:
      description: >-
        The service provider is in 'scenario 2' (its jurisdiction
        does not require to verify the creditor name but its
        pre-validation implementation verifies the creditor name).
        The account number provided in the request is in the
        beneficiary bankâ€™s books but classified as closed  and thus
        cannot receive incoming funds.
      value:
        correlation_identifier: SCENARIO2-CORRID-005
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOAP
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario2_account_matches_but_name_does_match:
      description: >-
        The service provider is in 'scenario 2' (its jurisdiction
        does not require to verify the creditor name but its
        pre-validation implementation verifies the creditor name).
        The account number provided in the request identifies an
        account in the beneficiary bankâ€™s books and is in a  state
        to be the target account of a payment transaction. However
        the name of the account holder doesnâ€™t match  the one
        provided in the request.
      value:
        correlation_identifier: SCENARIO2-CORRID-006
        response:
          account_validation_status: PASS
          creditor_account_match: MTCH
          creditor_name_match: NMTC
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario3_success_name_and_account_match:
      description: >-
        The service provider is in 'scenario 3' (its jurisdiction
        requires to verify the creditor name and its pre-validation
        implementation verifies the creditor name). There is an
        account in the beneficiary bankâ€™s books that is identified
        by the account identifier (number)  passed in the request
        and the holder of which corresponds to the given creditor
        name.  This account is open and capable of receiving funds.
      value:
        correlation_identifier: SCENARIO3-CORRID-001
        response:
          account_validation_status: PASS
          creditor_account_match: MTCH
          creditor_name_match: MTCH
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario3_failure_account_does_not_match:
      description: >-
        The service provider is in 'scenario 3' (its jurisdiction
        requires to verify the creditor name and its pre-validation
        implementation verifies the creditor name). The account
        number provided in the request is not in the beneficiary
        bankâ€™s books, and thus cannot receive  incoming funds.
      value:
        correlation_identifier: SCENARIO3-CORRID-002
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOTC
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario3_account_match_but_blocked_for_compliance_reason:
      description: >-
        The service provider is in 'scenario 3' (its jurisdiction
        requires to verify the creditor name and its pre-validation
        implementation verifies the creditor name). The account
        number provided in the request is in the beneficiary bankâ€™s
        books. However the account is  blocked for compliance
        reasons. The beneficiary bank cannot disclose any
        information about this state (â€˜no tipping offâ€™).
      value:
        correlation_identifier: SCENARIO3-CORRID-003
        response:
          account_validation_status: PASS
          creditor_account_match: MTCH
          creditor_name_match: MTCH
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario3_account_exists_but_type_does_not_allow_incoming_funds:
      description: >-
        The service provider is in 'scenario 3' (its jurisdiction
        requires to verify the creditor name
         and its pre-validation implementation verifies the creditor name).
         The account number provided in the request is in the beneficiary bankâ€™s books. However this type of
         account does not allow incoming funds (eg. mortgage account).
      value:
        correlation_identifier: SCENARIO3-CORRID-004
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOTC
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario3_account_exists_but_closed:
      description: >-
        The service provider is in 'scenario 3' (its jurisdiction
        requires to verify the creditor name and its pre-validation
        implementation verifies the creditor name). The account
        number provided in the request is in the beneficiary bankâ€™s
        books but classified as closed  and thus cannot receive
        incoming funds.
      value:
        correlation_identifier: SCENARIO3-CORRID-005
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOTC
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario3_account_matches_but_name_does_match:
      description: >-
        The service provider is in 'scenario 3' (its jurisdiction
        requires to verify the creditor name and its pre-validation
        implementation verifies the creditor name). The account
        number provided in the request identifies an account in the
        beneficiary bankâ€™s books and is in a  state to be the target
        account of a payment transaction. However the name of the
        account holder doesnâ€™t match  the one provided in the
        request.
      value:
        correlation_identifier: SCENARIO3-CORRID-006
        response:
          account_validation_status: PASS
          creditor_account_match: MTCH
          creditor_name_match: NOAP
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario4_success_name_and_account_match:
      description: >-
        The service provider is in 'scenario 4' (its jurisdiction
        requires to verify the creditor name but its pre-validation
        implementation does not verify the creditor name). There is
        an account in the beneficiary bankâ€™s books that is
        identified by the account identifier (number)  passed in the
        request and the holder of which corresponds to the given
        creditor name.  This account is open and capable of
        receiving funds.
      value:
        correlation_identifier: SCENARIO4-CORRID-001
        response:
          account_validation_status: INCO
          creditor_account_match: MTCH
          creditor_name_match: NOTC
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario4_failure_account_does_not_match:
      description: >-
        The service provider is in 'scenario 4' (its jurisdiction
        requires to verify the creditor name but its pre-validation
        implementation does not verify the creditor name). The
        account number provided in the request is not in the
        beneficiary bankâ€™s books, and thus cannot receive  incoming
        funds.
      value:
        correlation_identifier: SCENARIO4-CORRID-002
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOTC
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario4_account_match_but_blocked_for_compliance_reason:
      description: >-
        The service provider is in 'scenario 4' (its jurisdiction
        requires to verify the creditor name but its pre-validation
        implementation does not verify the creditor name). The
        account number provided in the request is in the beneficiary
        bankâ€™s books. However the account is  blocked for compliance
        reasons. The beneficiary bank cannot disclose any
        information about this state (â€˜no tipping offâ€™).
      value:
        correlation_identifier: SCENARIO4-CORRID-003
        response:
          account_validation_status: INCO
          creditor_account_match: MTCH
          creditor_name_match: NOTC
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario4_account_exists_but_type_does_not_allow_incoming_funds:
      description: >-
        The service provider is in 'scenario 4' (its jurisdiction
        requires to verify the creditor name but its pre-validation
        implementation does not verify the creditor name). The
        account number provided in the request is in the beneficiary
        bankâ€™s books. However this type of  account does not allow
        incoming funds (eg. mortgage account).
      value:
        correlation_identifier: SCENARIO4-CORRID-004
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOTC
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario4_account_exists_but_closed:
      description: >-
        The service provider is in 'scenario 4' (its jurisdiction
        requires to verify the creditor name but its pre-validation
        implementation does not verify the creditor name). The
        account number provided in the request is in the beneficiary
        bankâ€™s books but classified as closed  and thus cannot
        receive incoming funds.
      value:
        correlation_identifier: SCENARIO4-CORRID-005
        response:
          account_validation_status: FAIL
          creditor_account_match: NMTC
          creditor_name_match: NOTC
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario4_account_matches_but_name_does_match:
      description: >-
        The service provider is in 'scenario 4' (its jurisdiction
        requires to verify the creditor name but its pre-validation
        implementation does not verify the creditor name). The
        account number provided in the request identifies an account
        in the beneficiary bankâ€™s books and is in a  state to be the
        target account of a payment transaction. However the name of
        the account holder doesnâ€™t match  the one provided in the
        request.
      value:
        correlation_identifier: SCENARIO4-CORRID-006
        response:
          account_validation_status: INCO
          creditor_account_match: MTCH
          creditor_name_match: NOTC
          creditor_address_match: NOAP
          creditor_organisation_identification_match: NOAP
    scenario_not_allowed:
      value:
        status:
          severity: Fatal
          code: CANT
          text: >-
            service provider is not allowed to provide an answer for
            this specific account
    scenario_no_integration:
      value:
        status:
          severity: Fatal
          code: CANT
          text: >-
            account requested cannot be verified because unexisting
            integration with the book system where this account is
            maintained
    scenario_bad_request:
      value:
        status:
          severity: Fatal
          code: SwAP501
          text: API request is malformed
    scenario_invalid_token:
      value:
        status:
          severity: Fatal
          code: SwAP002
          text: Invalid OAuth Token
    scenario_insufficient_scope:
      value:
        status:
          severity: Fatal
          code: SwAP003
          text: >-
            OAuth access token has insufficient scope for the
            requested service.
    scenario_service_not_provisioned:
      value:
        status:
          severity: Fatal
          code: SwAP001
          text: API service not provisioned
  parameters:
    LAUApplicationID:
      name: LAUApplicationID
      in: header
      description: 'ID that identifies the application generating the API and used by the gpi Connector to retrieve the related LAU keys, required for consumers using gpi connector only.'
      required: true
      schema:
        type: string
        pattern: '^(?:[a-zA-Z0-9]{1,16})$'
        default: '001'
    LAUCallTime:
      name: LAUCallTime
      in: header
      description: 'Timestamp in UTC of the API call in the format YYYY-MM-DDTHH:MM:SS.sssZ, required for consumers using gpi connector only.'
      required: true
      schema:
        type: string
        pattern: '^(?:[1-9]\d{3}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1\d|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[1-9]\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-02-29)T(?:[01]\d|2[0-3]):[0-5]\d:[0-5]\d(?:\.[0-9]+)?(?:Z|[+-][01]\d:[0-5]\d)?$'
        example: '2018-03-23T15:56:26.728Z'
    LAURequestNonce:
      name: LAURequestNonce
      in: header
      description: 'A random value generated by the client consumer. Provided with the request and copied by the gpi Connector on the response, required for consumers using gpi connector only.'
      required: true
      schema:
        type: string
        pattern: '^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$'
        example: 'e802ab96-bb3a-4965-9139-5214b9f0f074'
    LAUResponseNonce:
      name: LAUResponseNonce
      description: 'A random value generated by the gpi Connector on the response.'
      schema:
        type: string
        example: '5f1fdf6c-9bbb-4707-bf9e-776e9be878b3'
    LAUSigned:
      name: LAUSigned
      in: header
      description: |
        Includes the signed headers to be passed to SWIFT in the request.

        * The first is the application API Key (ApplAPIKey).

        * The second parameter is the x-bic. It identifies the destination of the request.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        pattern: '^(?:\(ApplAPIKey=.{1,40}\),\(x-bic=[a-z]{6,6}[a-z2-9][a-np-z0-9]\))?$'
        example: '(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(x-bic=cclabeb0)'
    LAUVersion:
      name: LAUVersion
      in: header
      description: 'Version of the LAUSigned header. Mandatory. "1.0" for this first release, required for consumers using gpi connector only.'
      required: true
      schema:
        type: string
        pattern: '^(?:[1][\.][0])$'
        default: '1.0'
    LAUSignatureForRequest:
      name: LAUSignature
      in: header
      description: |
        Contains the LAU (SHA256) signature, base64 encoded, required for consumers using gpi connector only. The data signed is a concatenated string of following elements&#58;

        * All HTTP headers prefixed to "LAU", ordered in lexicographic order, and where the leading and trailing spaces and tabs are removed. The HTTP header itself including the "&#58;" and the CRLF at the end of the HTTP header field are included.

        * The abs_path (see RFC 2616) and any query parameter of the request URI, including the CRLF at the end. For example, if the URL is https&#58;//local-api-domain/swift-preval/v1/endpoint?next=bmV4dA==, the data signed is /swift-preval/v1/endpoint?next=bmV4dA==CRLF. Bear in mind CRLF the control characters added at the end.

        * The request body. If there is no request body, then only the HTTP headers and the abs_path are signed.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        pattern: '^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$'
        example: 'U1khA8h9Lm1PqzB99fG6uw=='
      x-swift-lau-request:
        cryptography: hmac-sha256
        sigBytes: 16
        inputDataPrefix: ':'
        inputDataDelimiter: CRLF
        inputData:
          type: object
          properties:
            LAUApplicationID:
              type: string
              example: '001'
            LAUCallTime:
              type: string
              example: '2018-03-23T15:56:27.728Z'
            LAURequestNonce:
              type: string
              example: 'e802ab96-bb3a-4965-9139-5214b9f0f074'
            LAUSigned:
              type: string
              example: '(ApplAPIKey=yVGhKiV5z1ZGdaqFXoZ8AiSA9n5CrY6B),(x-bic=cclabeb0)'
            LAUVersion:
              type: string
              example: '1.0'
            absPath:
              type: string
            requestBody:
              type: string
              example: HTTPBodyRequest
          required:
            - LAUApplicationID
            - LAUCallTime
            - LAURequestNonce
            - LAUSigned
            - LAUVersion
            - absPath
            - requestBody
        schema:
          type: string
          pattern: '^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$'
          example: 'U1khA8h9Lm1PqzB99fG6uw=='
    LAUSignatureForResponse:
      name: LAUSignature
      in: header
      description: 'Contains the LAU signature, base64 encoded'
      schema:
        type: string
        pattern: '^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$'
        example: 'U1khA8h9Lm1PqzB99fG6uw=='
      x-swift-lau-response:
        cryptography: hmac-sha256
        sigBytes: 16
        inputDataPrefix: ':'
        inputDataDelimiter: CRLF
        inputData:
          type: object
          properties:
            LAUApplicationID:
              type: string
              example: '001'
            LAUCallTime:
              type: string
              example: '2018-03-23T15:56:27.728Z'
            LAURequestNonce:
              type: string
              example: 'e802ab96-bb3a-4965-9139-5214b9f0f074'
            LAUResponseNonce:
              type: string
              example: '5f1fdf6c-9bbb-4707-bf9e-776e9be878b3'
            LAUVersion:
              type: string
              example: '1.0'
            responseBody:
              type: string
          required:
            - LAUApplicationID
            - LAUCallTime
            - LAURequestNonce
            - LAUResponseNonce
            - LAUVersion
            - responseBody
        schema:
          type: string
          pattern: '^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$'
          example: 'U1khA8h9Lm1PqzB99fG6uw=='
    x-bic:
      name: x-bic
      in: header
      description: 'Describe the BIC for SWIFT to route the request. Providers get the value and consumers are not required to fill it in.'
      required: true
      schema:
        type: string
        pattern: '^[a-z]{6,6}[a-z2-9][a-np-z0-9]$'
        example: 'cclabeb0'
    SubjectDN:
      name: SubjectDN
      in: header
      description: 'Describe the Distinguished Name (DN) of the consumer. Providers get the value and consumers are not required to fill it in.'
      schema:
        type: string
        example: 'o=cclausb0,o=swift'
    Institution:
      name: Institution
      in: header
      description: 'Describe the BIC of the consumer. Providers get the value and consumers are not required to fill it in.'
      schema:
        type: string
        example: 'cclausb0'
  schemas:
    AccountVerificationRequest:
      required:
      - context
      - creditor_account
      - creditor_name
      type: object
      properties:
        correlation_identifier:
          $ref: '#/components/schemas/Max50Text'
        context:
          $ref: '#/components/schemas/AccountValidationCheckContext1Code'
        uetr:
          $ref: '#/components/schemas/UUIDv4Identifier'
        creditor_account:
          $ref: '#/components/schemas/Max34Text'
        creditor_name:
          $ref: '#/components/schemas/Max140Text'
        creditor_address:
          $ref: '#/components/schemas/PostalAddress26'
        creditor_organisation_identification:
          $ref: '#/components/schemas/OrganisationIdentification8'
        creditor_agent:
          $ref: '#/components/schemas/FinancialInstitutionIdentification20'
        creditor_agent_branch_identification:
          $ref: '#/components/schemas/Max35Text'
      additionalProperties: false
      description: Beneficiary account verification request.
      example:
        correlation_identifier: CORRID-003
        context: BENR
        uetr: b916a97d-a699-4f20-b8c2-2b07e2684a27
        creditor_account: GB3112000000001987426375
        creditor_name: John Doe
        creditor_address:
          country: GB
        creditor_organisation_identification:
          any_bic: BIC1GB51
    Max50Text:
      maxLength: 50
      minLength: 1
      type: string
      description: Specifies a character string with a maximum length of 50 characters.
    AccountValidationCheckContext1Code:
      type: string
      enum:
      - BENR
      - PAYM
      - RFPP
    UUIDv4Identifier:
      pattern: ^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89ab][a-f0-9]{3}-[a-f0-9]{12}$
      type: string
      description: Universally Unique IDentifier (UUID) version 4, as described in
        IETC RFC 4122 "Universally Unique IDentifier (UUID) URN Namespace".
    Max34Text:
      maxLength: 34
      minLength: 1
      type: string
      description: Specifies a character string with a maximum length of 34 characters.
    Max140Text:
      maxLength: 140
      minLength: 1
      type: string
      description: Specifies a character string with a maximum length of 140 characters.
    PostalAddress26:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/CountryCode'
        address_line:
          maxItems: 7
          type: array
          description: Information that locates and identifies a specific address,
            as defined by postal services, presented in free format text.
          items:
            $ref: '#/components/schemas/Max70Text'
        post_code:
          $ref: '#/components/schemas/Max16Text'
        town_name:
          $ref: '#/components/schemas/Max35Text'
      additionalProperties: false
      description: Information that locates and identifies a specific address, as
        defined by postal services.
    CountryCode:
      pattern: ^[A-Z]{2,2}$
      type: string
      description: Code to identify a country, a dependency, or another area of particular
        geopolitical interest, on the basis of country names obtained from the United
        Nations (ISO 3166, Alpha-2 code).
    Max70Text:
      maxLength: 70
      minLength: 1
      type: string
      description: Specifies a character string with a maximum length of 70characters.
    Max16Text:
      maxLength: 16
      minLength: 1
      type: string
      description: Specifies a character string with a maximum length of 16 characters.
    Max35Text:
      maxLength: 35
      minLength: 1
      type: string
      description: Specifies a character string with a maximum length of 35 characters.
    OrganisationIdentification8:
      type: object
      properties:
        any_bic:
          $ref: '#/components/schemas/AnyBICIdentifier'
        other:
          type: array
          description: Unique identification of an organisation, as assigned by an
            institution, using an identification scheme.
          items:
            $ref: '#/components/schemas/GenericOrganisationIdentification1'
      additionalProperties: false
      description: Unique and unambiguous way to identify an organisation.
    AnyBICIdentifier:
      pattern: ^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$
      type: string
      description: Code allocated to a financial or non-financial institution by the
        ISO 9362 Registration Authority, as described in ISO 9362 "Banking - Banking
        telecommunication messages - Business identifier code (BIC)".
    GenericOrganisationIdentification1:
      required:
      - identification
      type: object
      properties:
        identification:
          $ref: '#/components/schemas/Max35Text'
        scheme_name:
          $ref: '#/components/schemas/OrganisationIdentificationSchemeName1Choice'
        issuer:
          $ref: '#/components/schemas/Max35Text'
      additionalProperties: false
      description: Information related to an identification of an organisation.
      example:
        identification: AA1234567890
    OrganisationIdentificationSchemeName1Choice:
      maxProperties: 1
      minProperties: 1
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ExternalOrganisationIdentification1Code'
        proprietary:
          $ref: '#/components/schemas/Max35Text'
      additionalProperties: false
      description: Sets of elements to identify a name of the organisation identification
        scheme.
      example:
        code: TXID
    ExternalOrganisationIdentification1Code:
      type: string
      description: "Specifies the external organisation identification scheme name\
        \ code in the format of character string with a maximum length of 4 characters.\r\
        \nThe list of valid codes is an external code list published separately.\r\
        \nExternal code sets can be downloaded from www.iso20022.org."
    FinancialInstitutionIdentification20:
      type: object
      properties:
        bicfi:
          $ref: '#/components/schemas/BICFIIdentifier'
        clearing_system_member_identification:
          $ref: '#/components/schemas/ClearingSystemMemberIdentification2'
      additionalProperties: false
      description: Set of elements used to identify a financial institution.
    BICFIIdentifier:
      pattern: ^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$
      type: string
      description: Code allocated to a financial institution by the ISO 9362 Registration
        Authority as described in ISO 9362 "Banking - Banking telecommunication messages
        - Business identifier code (BIC)".
    ClearingSystemMemberIdentification2:
      required:
      - member_identification
      type: object
      properties:
        clearing_system_identification:
          $ref: '#/components/schemas/ClearingSystemIdentification2Choice'
        member_identification:
          $ref: '#/components/schemas/Max35Text'
      additionalProperties: false
      description: Unique identification, as assigned by a clearing system, to unambiguously
        identify a member of the clearing system.
    ClearingSystemIdentification2Choice:
      maxProperties: 1
      minProperties: 1
      type: object
      properties:
        code:
          $ref: '#/components/schemas/ExternalClearingSystemIdentification1Code'
        proprietary:
          $ref: '#/components/schemas/Max35Text'
      additionalProperties: false
      description: Choice of a clearing system identifier.
    ExternalClearingSystemIdentification1Code:
      type: string
      description: "Specifies the clearing system identification code, as published\
        \ in an external clearing system identification code list.\r\nExternal code\
        \ sets can be downloaded from www.iso20022.org."
    AccountVerificationResponse1:
      required:
      - response
      type: object
      properties:
        correlation_identifier:
          $ref: '#/components/schemas/Max50Text'
        response:
          $ref: '#/components/schemas/ValidationCheckReponse1'
      additionalProperties: false
      description: Beneficiary account verification response.
      example:
        correlation_identifier: CORRID-003
        response:
          account_validation_status: PASS
          creditor_account_match: NMTC
          creditor_name_match: NOTC
          creditor_address_match: NOTC
          creditor_organisation_identification_match: NOTC
    ValidationCheckReponse1:
      required:
      - account_validation_status
      - creditor_address_match
      - creditor_name_match
      - creditor_organisation_identification_match
      type: object
      properties:
        account_validation_status:
          $ref: '#/components/schemas/AccountValidationResponse3Code'
        creditor_account_match:
          $ref: '#/components/schemas/AccountValidationResponse2Code'
        creditor_name_match:
          $ref: '#/components/schemas/AccountValidationResponse1Code'
        creditor_address_match:
          $ref: '#/components/schemas/AccountValidationResponse1Code'
        creditor_organisation_identification_match:
          $ref: '#/components/schemas/AccountValidationResponse1Code'
      additionalProperties: false
    AccountValidationResponse3Code:
      type: string
      enum:
      - PASS
      - INCO
      - FAIL
    AccountValidationResponse2Code:
      type: string
      enum:
      - NMTC
      - MTCH
    AccountValidationResponse1Code:
      type: string
      enum:
      - NOTC
      - NOAP
      - NMTC
      - MTCH
    ErrorCodeConsumer:
      required:
      - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusCodeConnector'
    StatusCodeConnector:
      required:
      - code
      - severity
      - text
      properties:
        severity:
          type: string
          enum:
          - Fatal
          - Transient
        code:
          type: string
          enum:
          - SwAP001
          - SwAP002
          - SwAP003
          - SwAP008
          - SwAP501
          - SwAP506
          - SwAP507
          - SwAP590
          - SwAP591
          - SwAP599
          - SwAPProxy001
          - SwAPProxy002
          - SwAPProxy003
          - SwAPProxy004
          - SwAPProxy005
          - SwAPProxy006
          - SwAPProxy007
          - SwAPProxy008
          - CANT
          - UNAV
        text:
          type: string
  securitySchemes:
    SwiftLAU:
      type: apiKey
      name: LAUSignature
      in: header
